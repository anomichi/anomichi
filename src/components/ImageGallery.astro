---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
import SingleImage from './SingleImage.astro';

interface Props {
  images: ImageMetadata[];
}
const { images } = Astro.props;
---

<div class="image-gallery">
  <SingleImage image={images[0]} />
  <div class="thumbnail-area inner-break">
    <ul class="thumbnails">
      {images.map(image => (
        <li class="thumbnail" role="button" data-thumbnail>
          <Image src={image} alt="" layout="full-width" fit="contain" />
        </li>
      ))}
    </ul>
  </div>
</div>

<style>
  .image-gallery {
    display: flex;
    flex-direction: column;
  }

  .thumbnail-area {
    overflow-x: auto;
    padding: 0 1em 1em;
    background: rgba(0, 0, 0, 0.7);
  }

  .thumbnails {
    display: flex;
    gap: 0.5rem;
    width: max-content;
    padding: 0;
    margin: 0;
    list-style: none;
  }

  .thumbnail {
    background: rgba(0, 0, 0, 0.3);
    cursor: pointer;
  }

  .thumbnail img {
    width: 100px;
    height: 100px;
  }
</style>

<script>
  function init(rootEl: HTMLElement) {
    const singleImage = rootEl.querySelector<HTMLElement>('[data-single-image]');
    const thumbnails = rootEl.querySelectorAll<HTMLElement>('[data-thumbnail]');
    if (!singleImage || thumbnails.length === 0) return;

    const handleClick = (thumbnail: HTMLElement) => {
      const img = thumbnail.querySelector('img');
      if (!img) return;

      const clone = img.cloneNode(true);
      singleImage.innerHTML = '';
      singleImage.appendChild(clone);
    }
    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', () => handleClick(thumbnail));
    });
  }

  window.addEventListener('load', () => {
    const imageGalleries = document.querySelectorAll<HTMLElement>('.image-gallery');
    imageGalleries.forEach(imageGallery => init(imageGallery));
  })

</script>
